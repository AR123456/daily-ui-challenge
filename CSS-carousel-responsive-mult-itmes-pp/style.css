* {
  box-sizing: border-box;
}
body {
  margin: 0;
  font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
}
h1 {
  text-align: center;
  font-size: 1.7rem;
}
/* using css multicolumn layout  */
ul {
  width: 100vw;
  height: 300px;
  padding: 10px;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  /* force each colum tobe full widht */
  columns: 1;
  /* force contenst to align with center of list */
  text-align: center;
}
/* allow items to fit single content column, depending on the viewport width. number dynamically changes as the list gets wider or narrower */
li {
  list-style-type: none;
  /* force the list items to sit alongside one another and make the list scroll horizontally. */
  display: inline-block;
  height: 100%;
  /* control their sizing, meaning one or more will fit in a column that grows and shrinks along with the width of the viewport. */
  width: 200px;
  background-color: #eee;
  border: 1px solid #ddd;
  padding: 20px;
  margin: 0 10px;
  /* left is set on them to override the text-align: center set on the parent container, so the item content will be left-aligned */
  text-align: left;
}

li:nth-child(even) {
  background-color: cyan;
}
ul::column {
  /* snap to each complete column rather than every individual list item, showing all new items with each scroll action */
  scroll-snap-align: center;
}
/* the scroll markers are created on the generated ::column scroll markers rather than the list items */
ul::column::scroll-marker {
  content: "";
  width: 16px;
  height: 16px;
  background-color: transparent;
  border: 2px solid black;
  border-radius: 10px;
}
